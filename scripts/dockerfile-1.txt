@_ECHO_OFF
tabname dockerfile-1
export DOCKER_BUILDKIT=0
SAVED_DEMO_DELAY=${DEMO_DELAY}
dclean

export BAT_LANG_FLAG="-l Dockerfile"

# Set up demo
cd ${DEMO_TEMP}
if [ ! -d hello-go ]; then git clone git@github.com:ciberkleid/hello-go; fi
# Stash some files for later
HELLO_FILES="${DEMO_TEMP}/hello-go-temp/hello"
mkdir -p "${HELLO_FILES}"
mv hello-go/hello/Dockerfile-*  "${HELLO_FILES}"/

# Start demo
cd ${DEMO_TEMP}/hello-go/hello
clear
@_ECHO_ON

@_SKIP# simple example
ls
go run hello.go
go run hello.go world
clear
bat Dockerfile
@_SKIP# build static binary (also rebuild imports as static) for Linux
@_SKIPCGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -a -installsuffix cgo -o hello
GOOS=linux go build hello.go; ls
docker build . -t hello
clear
docker images
docker run hello
docker run hello world
docker run hello /hello world

@_SKIP# image as binary
mv "${HELLO_FILES}"/* .; clear
cattd Dockerfile Dockerfile-1
docker build . -f Dockerfile-1 -t hello
docker run hello
docker run hello sunshine

clear
# caching
docker images
docker history hello

@_SKIP# build app
clear
bat Dockerfile-2
docker build . -f Dockerfile-2 -t hello
docker run hello all
docker images

@_SKIP# multi-stage
clear
bat Dockerfile-3
docker build . -f Dockerfile-3 -t hello
docker images
