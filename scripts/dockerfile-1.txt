@_ECHO_OFF
tabname dockerfile-1
export DOCKER_BUILDKIT=0
SAVED_DEMO_DELAY=${DEMO_DELAY}
dclean

# Set up go demo
mkdir -p ${DEMO_TEMP}/hello-go
cd ${DEMO_TEMP}/hello-go
cp ${DEMO_FILES}/hello-go/Dockerfile .
cp ${DEMO_FILES}/hello-go/hello.go .
#go mod init example.com/hello
@_SKIPcp ${DEMO_FILES}/hello-go/go.mod .
@_SKIPcp ${DEMO_FILES}/hello-go/go.sum .
@_SKIPgo mod download #-json

# Set up to start demo
cd ${DEMO_TEMP}/hello-go
clear
@_ECHO_ON

# simple example
ls
go run hello.go
go run hello.go world
cat Dockerfile
@_SKIP# build static binary (also rebuild imports as static) for Linux
@_SKIPCGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -a -installsuffix cgo -o hello
GOOS=linux go build hello.go; ls
docker build . -t hello
docker images
docker run hello
docker run hello world
docker run hello /hello world

# image as binary
cp ${DEMO_FILES}/hello-go/Dockerfile-* .
cat Dockerfile-1
docker build . -f Dockerfile-1 -t hello
docker run hello
docker run hello sunshine

# caching
docker images
docker history hello

# build app
cat Dockerfile-2
docker build . -f Dockerfile-2 -t hello
docker run hello all
docker images

# multi-stage
cat Dockerfile-3
docker build . -f Dockerfile-3 -t hello
docker images
