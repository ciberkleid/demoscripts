@_ECHO_OFF
export DOCKER_BUILDKIT=0
dclean
setBatLang Dockerfile

# Set up java demo
cd ${DEMO_TEMP}
if [ ! -d hello-java ]; then git clone git@github.com:ciberkleid/hello-java; fi
cd hello-java
# Install dependencies into a repo in the context
if [ ! -d ./.m2/repository ]; then ./mvnw -Dmaven.repo.local=./.m2/repository dependency:go-offline; fi
# Build jar (assume default config is layered)
if [ ! -f ./target/*.jar ]; then ./mvnw -Dmaven.repo.local=./.m2/repository clean package -DskipTests; fi
# Package jar & extract (default)
if [ ! -d temp-default ]; then mkdir -p temp-default; cd temp-default; jar -xf ../target/*.jar; cd ..; fi
# Package jar & extract (layered)
if [ ! -d temp-layered ]; then mkdir -p temp-layered; cd temp-layered; java -Djarmode=layertools -jar  ../target/*.jar extract; mkdir -p snapshot-dependencies; cd ..; fi

# Set up to start demo
cd ${DEMO_TEMP}/hello-java
# Copy Dockerfiles and .dockerignore file
cp -r Dockerfiles/. .
clear

@_ECHO_ON
@_SKIP# review
bat Dockerfile-1
@_ECHO_OFF
setBatLang exclude
@_ECHO_ON
bat .dockerignore
@_ECHO_OFF
setBatLang Dockerfile
@_ECHO_ON
clear

# buildkit
batd Dockerfile-1 Dockerfile-2
@_SKIPcatd Dockerfile-1 Dockerfile-2
@_SKIPdiff -u Dockerfile-1 Dockerfile-2 | delta
export DOCKER_BUILDKIT=1
docker build . -t hello-java -f Dockerfile-2     # --progress=plain
sed -i '' 's/starter-actuator/configuration-processor/g' pom.xml; git diff pom.xml
docker build . -t hello-java -f Dockerfile-2

@_SKIPclear
@_SKIP# bind mount
@_SKIPcatd Dockerfile-2 Dockerfile-2b
@_SKIP./mvnw -Dmaven.repo.local=./.m2/repository dependency:go-offline
@_SKIPls ./.m2/repository
@_SKIPdocker build . -t hello-java -f Dockerfile-2b
@_SKIPcat Dockerfile-2b.dockerignore

clear
# java entrypoint
docker run -e "JAVA_OPTS=-Ddebug -Xmx128m" hello-java --server.port=8081
docker run -e "JAVA_OPTS=-Ddebug -Xmx128m" hello-java
# JAVA_TOOL_OPTIONS will work
colordiff Dockerfile-2 Dockerfile-3
docker build . -t hello-java -f Dockerfile-3
docker run -p 8081:8081 -e "JAVA_OPTS=-Ddebug -Xmx128m" hello-java --server.port=8081
@_SKIP# http localhost:8081 # In a different window
@_SKIP# <Ctrl+C> in container process window to stop container

clear
# unpack jar
ls -l temp-default
batd Dockerfile-3 Dockerfile-4

# unpack - Spring Boot 2.3.0
@_SKIPcat pom.xml
ls -l temp-layered
@_SKIPhead temp-layered/application/BOOT-INF/layers.idx
@_SKIPtail temp-layered/application/BOOT-INF/layers.idx
batd Dockerfile-3 Dockerfile-5
@_SKIPdocker build . -t hello-java -f Dockerfile-5
@_SKIPcp demo/HelloController.java src/main/java/com/example/hello-java/controller/
@_SKIPdocker build . -t hello-java -f Dockerfile-5
@_SKIPdocker history hello-java
@_SKIPdocker run -p 8080:8080 hello-java

@_SKIP# LABELS ??????? ARGS ??? ENV ???

@_SKIP# args, choice of image
@_SKIPbat Dockerfile-6
