# syntax=docker/dockerfile:experimental

FROM adoptopenjdk:11-jdk-hotspot AS build
WORKDIR /workspace
COPY ../../../temp/dockerfile-3/cool-app/.mvn .mvn
COPY ../../../temp/dockerfile-3/cool-app/mvnw mvnw
COPY ../../../temp/dockerfile-3/cool-app/pom.xml .
RUN --mount=type=cache,target=/root/.m2 \
    ./mvnw dependency:go-offline
COPY ../../../temp/dockerfile-3/cool-app/src src/
RUN --mount=type=cache,target=/root/.m2 \
    ./mvnw clean package -DskipTests --offline

FROM adoptopenjdk:11-jre-hotspot AS release
LABEL org.opencontainers.image.authors="me@example.com"
WORKDIR /workspace
ENV TINI_VERSION v0.19.0
ADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /tini
COPY run.sh .
RUN chmod +x /tini && chmod +x run.sh
COPY --from=build /workspace/target/*.jar app.jar
USER 1002
# All of the following options work:
#ENTRYPOINT ["sh", "-c", "exec java ${JAVA_OPTS} -jar app.jar ${0} ${@}"]
#ENTRYPOINT ["/tini", "-g", "--", "/workspace/run.sh"]
ENTRYPOINT ["/tini", "-g", "--", "sh", "-c", "java ${JAVA_OPTS} -jar app.jar ${0} ${@}"]
#ENTRYPOINT ["/tini", "-g", "--", "sh", "-c", "exec java ${JAVA_OPTS} -jar app.jar ${0} ${@}"]
